import { useState, useEffect } from "react";

const slides = [
  {
    id: 1,
    icon: (
      <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M5 4v3h5.5v12h3V7H19V4z"/>
      </svg>
    ),
    title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤",
    description: "–ó–∞—Ç—Ä—É–¥–Ω—è–µ—Ç–µ—Å—å —á–∏—Ç–∞—Ç—å –º–µ–ª–∫–∏–π —Ç–µ–∫—Å—Ç? –£–≤–µ–ª–∏—á—å—Ç–µ —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–æ 150% –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –º–µ–∂–¥—É—Å—Ç—Ä–æ—á–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞ —á—Ç–µ–Ω–∏—è."
  },
  {
    id: 2,
    icon: (
      <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/>
      </svg>
    ),
    title: "–û–∑–≤—É—á–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞",
    description: "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å–ª—É—Ö? –í—ã–¥–µ–ª–∏—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–∞–π—Ç–µ, –∏ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –µ–≥–æ –≤—Å–ª—É—Ö —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏."
  },
  {
    id: 3,
    icon: (
      <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>
      </svg>
    ),
    title: "–í–∏–∑—É–∞–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è",
    description: "–ò—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ–º —Ü–≤–µ—Ç–æ–≤? –í–∫–ª—é—á–∏—Ç–µ —á–µ—Ä–Ω–æ-–±–µ–ª—ã–π —Ä–µ–∂–∏–º –∏–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ —Å –∑–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–µ–π Shift."
  },
  {
    id: 4,
    icon: (
      <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M7.5 2C5.71 3.15 4.5 5.18 4.5 7.5c0 1.77.78 3.34 2 4.44V20h11v-8.06c1.22-1.1 2-2.67 2-4.44 0-2.32-1.21-4.35-3-5.5L12 9 7.5 2z"/>
      </svg>
    ),
    title: "–¢–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
    description: "–†–∞–±–æ—Ç–∞–µ—Ç–µ –≤ —Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –∏–ª–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∫ —è—Ä–∫–æ–º—É —Å–≤–µ—Ç—É? –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ —Ç–µ–º–Ω—É—é —Ç–µ–º—É —Å –∫–æ—Å–º–∏—á–µ—Å–∫–∏–º–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è."
  },
  {
    id: 5,
    icon: (
      <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z"/>
      </svg>
    ),
    title: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏–µ–º",
    description: "–ê–Ω–∏–º–∞—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—é—Ç –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –∏–ª–∏ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ? –û—Ç–∫–ª—é—á–∏—Ç–µ –≤—Å–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."
  },
  {
    id: 6,
    icon: (
      <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
        <path d="M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z"/>
      </svg>
    ),
    title: "–ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã",
    description: "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –º—ã—à—å? –ü–µ—Ä–µ–º–µ—â–∞–π—Ç–µ—Å—å –ø–æ —Å–∞–π—Ç—É —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏—à–∏ Tab, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Skip Links –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É."
  }
];

export default function AccessibilityFeaturesSlider() {
  const [currentSlide, setCurrentSlide] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % slides.length);
    }, 5000);

    return () => clearInterval(interval);
  }, []);

  const handleTryClick = () => {
    const accessibilityButton = document.querySelector('[aria-label="–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"]') as HTMLButtonElement;
    if (accessibilityButton) {
      accessibilityButton.click();
    }
  };

  return (
    <section className="relative text-white overflow-hidden py-16" aria-labelledby="accessibility-features">
      {/* Background with same gradient as hero */}
      <div className="absolute inset-0 bg-gradient-to-br from-blue-600 via-cyan-600 to-teal-500 dark:from-purple-900 dark:via-blue-900 dark:to-indigo-900"></div>
      
      {/* Accessibility symbols pattern overlay */}
      <div className="absolute inset-0 opacity-10">
        <div className="grid grid-cols-8 gap-8 transform rotate-12 scale-110">
          {Array.from({ length: 48 }).map((_, i) => (
            <div key={i} className="flex items-center justify-center text-6xl text-white/20">
              {i % 4 === 0 && "‚ôø"}
              {i % 4 === 1 && "üëÅ"}
              {i % 4 === 2 && "üîä"}
              {i % 4 === 3 && "‚å®"}
            </div>
          ))}
        </div>
      </div>

      <div className="relative z-10 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-16">
          <h2 id="accessibility-features" className="text-4xl font-bold mb-4">
            –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –∑–∞–±–æ—Ç–∞ –æ –∫–∞–∂–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
          </h2>
          <p className="text-xl opacity-90">
            –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–∞–π—Ç –ø–æ–¥ —Å–≤–æ–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
          </p>
        </div>

        {/* Slide Content */}
        <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-8 md:p-12 border border-white/20 min-h-[300px] flex flex-col justify-between">
          <div className="text-center">
            {/* Slide Icon */}
            <div className="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-6">
              {slides[currentSlide].icon}
            </div>

            {/* Slide Title */}
            <h3 className="text-2xl md:text-3xl font-bold mb-6">
              {slides[currentSlide].title}
            </h3>

            {/* Slide Description */}
            <p className="text-lg md:text-xl opacity-90 leading-relaxed max-w-2xl mx-auto mb-8">
              {slides[currentSlide].description}
            </p>

            {/* Try Button */}
            <button 
              onClick={handleTryClick}
              className="bg-white text-blue-600 hover:bg-blue-50 hover:text-blue-700 font-semibold py-3 px-8 rounded-lg shadow-lg transition-all transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-white/50"
              aria-describedby="try-accessibility-desc"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å
            </button>
            <p id="try-accessibility-desc" className="text-sm opacity-75 mt-3">
              –û—Ç–∫—Ä–æ–µ—Ç –ø–∞–Ω–µ–ª—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
            </p>
          </div>
        </div>

        {/* Slide Indicators */}
        <div className="flex justify-center mt-8 gap-2">
          {slides.map((_, index) => (
            <button
              key={index}
              onClick={() => setCurrentSlide(index)}
              className={`w-3 h-3 rounded-full transition-all ${
                index === currentSlide 
                  ? 'bg-white' 
                  : 'bg-white/30 hover:bg-white/50'
              }`}
              aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–∞–π–¥—É ${index + 1}: ${slides[index].title}`}
            />
          ))}
        </div>

        {/* Slide Counter */}
        <div className="text-center mt-4">
          <span className="text-sm opacity-75">
            {currentSlide + 1} –∏–∑ {slides.length}
          </span>
        </div>
      </div>
    </section>
  );
}