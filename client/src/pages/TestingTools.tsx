import { useEffect } from "react";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import MetaTags from "@/components/MetaTags";
import ExpandableSection from "@/components/ExpandableSection";

export default function TestingTools() {
  useEffect(() => {
    window.scrollTo(0, 0);
    document.title = "Инструменты тестирования доступности - Incluser";
  }, []);

  return (
    <div className="min-h-screen bg-background flex flex-col">
      <MetaTags
        title="Инструменты тестирования доступности - Incluser"
        description="Полное руководство по инструментам для тестирования веб-доступности: онлайн-валидаторы, расширения браузеров, скринридеры и вспомогательные технологии."
        url={`${window.location.origin}/testing-tools`}
      />
      <Header />
      
      <main id="main-content" className="flex-1">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <article className="space-y-8">
            <header className="mb-8">
              <h1 className="text-4xl font-bold tracking-tight text-foreground mb-4">
                Инструменты тестирования доступности
              </h1>
              <div className="prose prose-lg dark:prose-invert max-w-none prose-content">
                <p>
                  Полноценное тестирование доступности требует сочетания автоматизированных проверок и ручного тестирования. 
                  Автоматические инструменты помогают быстро найти типовые ошибки (по оценкам, до 30% всех дефектов доступности), 
                  но не выявляют всех проблем. Поэтому после их использования необходимо проводить ручное тестирование, 
                  в том числе с помощью вспомогательных технологий (например, скринридеров).
                </p>
              </div>
            </header>

            <ExpandableSection
              title="Онлайн-валидаторы и автоматические инструменты"
              description="Онлайн-валидаторы позволяют проверить код и содержимое страниц на соответствие стандартам без установки дополнительного ПО. Удобны для использования на ранних этапах разработки."
            >
              <h3>Основные инструменты</h3>
              
              <h4>W3C HTML Validator</h4>
              <p>
                Официальный валидатор разметки HTML/XHTML от World Wide Web Consortium. Проверяет страницу на правильность 
                HTML-разметки и соответствие спецификации (Document Type Definition). Это бесплатный сервис, позволяющий найти 
                незакрытые теги, неправильную вложенность и другие ошибки кода. Валидатор поможет улучшить техническое качество 
                страниц и избежать проблем, которые могут мешать работе assistive technologies.
              </p>
              <p><em>Ссылка:</em> <a href="https://validator.w3.org/" target="_blank" rel="noopener noreferrer">validator.w3.org</a></p>

              <h4>W3C CSS Validator</h4>
              <p>
                Аналогичный сервис для проверки таблиц стилей (CSS) на ошибки. Он анализирует подключённые CSS-файлы или стили 
                в коде страницы и сверяет их с текущими стандартами CSS. Например, инструмент укажет на опечатки в свойствах 
                или недопустимые значения, что косвенно способствует доступности (корректно написанные стили не будут приводить 
                к непредвидённым ошибкам отображения).
              </p>
              <p><em>Ссылка:</em> <a href="https://jigsaw.w3.org/css-validator/" target="_blank" rel="noopener noreferrer">jigsaw.w3.org/css-validator</a></p>

              <h4>WAVE Web Accessibility Evaluation Tool</h4>
              <p>
                Один из самых популярных бесплатных инструментов автоматической проверки доступности веб-страниц. Разработан 
                организацией WebAIM. WAVE анализирует указанную страницу на соответствие принципам доступности (WCAG) и визуально 
                выделяет найденные проблемы прямо на странице. Для использования веб-сервиса достаточно ввести URL страницы 
                на сайте WAVE.
              </p>
              
              <p>WAVE отмечает цветными иконками разные элементы:</p>
              <ul>
                <li><strong>Ошибки (красные значки)</strong> – явные нарушения доступности, требующие исправления</li>
                <li><strong>Предупреждения (жёлтые значки)</strong> – потенциальные проблемы или недочёты, требующие внимания</li>
                <li><strong>Особенности (зелёные значки)</strong> – правильные элементы, улучшающие доступность</li>
                <li><strong>Структура (синие значки)</strong> – обозначение семантической структуры страницы</li>
                <li><strong>ARIA (фиолетовые значки)</strong> – подсказки по использованию атрибутов ARIA</li>
              </ul>

              <h4>Tenon.io</h4>
              <p>
                Многофункциональный сервис автоматизированного тестирования доступности, доступный в бесплатной и платной версиях. 
                Tenon предлагает браузерное расширение и API. Инструмент генерирует подробные отчёты с фрагментами кода, указанием 
                ошибок и ссылками на руководства по доступности.
              </p>

              <h3>Проверка цветового контраста</h3>
              <p>
                Недостаточный контраст текста – одна из самых частых проблем доступности, за последний год обнаружена на 86% 
                главных страниц сайтов. Для проверки сочетаний цветов существуют отдельные инструменты:
              </p>

              <h4>WebAIM Contrast Checker</h4>
              <p>
                Простой онлайн-калькулятор контрастности от WebAIM. Позволяет ввести цвет текста и фона (в HEX или RGB) 
                и показывает коэффициент контрастности и соответствие уровням WCAG (AA/AAA).
              </p>

              <h4>Are My Colors Accessible</h4>
              <p>
                Интерактивный веб-сервис для оценки доступности цветовой палитры. В базовом режиме рассчитывает контраст между 
                двумя заданными цветами, учитывая размер и начертание шрифта. В «Palette Mode» можно сразу проверить все цвета 
                палитры друг с другом.
              </p>

              <h4>Color Contrast Analyser</h4>
              <p>
                Настольное приложение (Windows/Mac) от TPG Interactive. Оно позволяет замерять контраст напрямую с экрана 
                с помощью пипетки или по введённым значениям и определяет соответствие уровням WCAG 2.1.
              </p>

              <h4>Stark</h4>
              <p>
                Расширение для браузеров (Chrome, Figma и пр.), которое, помимо расчёта контраста, умеет симулировать различные 
                виды цветовой слепоты на странице. Это помогает проверить восприятие цветов пользователями с нарушениями 
                цветоразличения.
              </p>
            </ExpandableSection>

            <ExpandableSection
              title="Расширения для браузеров и встроенные инструменты"
              description="Расширения для браузеров интегрируются в привычную среду разработки и позволяют оперативно проверять доступность непосредственно на просматриваемой странице."
            >
              <h3>Популярные расширения</h3>

              <h4>WAVE (расширение для Chrome, Firefox, Edge)</h4>
              <p>
                Расширение WAVE от WebAIM позволяет запустить проверку доступности текущей страницы одним кликом прямо в браузере. 
                После установки добавляется значок WAVE в панель инструментов.
              </p>
              <p>
                <strong>Как использовать:</strong> зайдите на любую страницу и нажмите значок WAVE – поверх страницы сразу появятся 
                цветные иконки, обозначающие ошибки, предупреждения и важные элементы, а сбоку откроется панель с сводкой результатов.
              </p>

              <h4>axe DevTools</h4>
              <p>
                Расширение <strong>axe</strong> от компании Deque Systems – мощный автоматизированный сканер, интегрируемый в инструменты 
                разработчика. После установки оно добавляет вкладку «<strong>axe DevTools</strong>» в панель DevTools (F12) браузера 
                Chrome или Firefox.
              </p>
              
              <p><strong>Особенности axe DevTools:</strong></p>
              <ul>
                <li>Полностью <strong>open source</strong> библиотека (axe-core), на которой основано расширение</li>
                <li><strong>Настраиваемость:</strong> можно добавлять свои правила проверки или интегрировать движок axe в автоматизированные тесты</li>
                <li><strong>Приоритизация проблем:</strong> в отчёте axe указывает уровень критичности каждой проблемы</li>
                <li><strong>Intelligent Guided Tests:</strong> расширение предлагает полуавтоматические guided tests</li>
                <li><strong>Экспорт отчётов:</strong> результаты сканирования можно сохранять и экспортировать</li>
              </ul>

              <h4>Accessibility Insights</h4>
              <p>
                Бесплатный инструмент от Microsoft для комплексного тестирования доступности. Доступен в нескольких вариантах: 
                приложение для <strong>Windows</strong>, приложение для <strong>Android</strong> и расширение для 
                <strong>браузера Chrome/Edge</strong>.
              </p>
              
              <p>Режимы работы:</p>
              <ul>
                <li><strong>Fast Pass</strong> – быстрая автоматическая проверка страницы на основные ошибки</li>
                <li><strong>Assessment (Оценка)</strong> – полный пошаговый сценарий тестирования, объединяющий автоматические, полуавтоматические и ручные проверки</li>
                <li><strong>Эксплорер структуры</strong> – режим просмотра структуры страницы и информации о каждом элементе</li>
              </ul>

              <h4>Siteimprove Accessibility Checker</h4>
              <p>
                Бесплатное расширение для Chrome от компании Siteimprove. После запуска, подобно WAVE, открывает боковую панель 
                с перечнем обнаруженных проблем на странице. Особенность Siteimprove – удобная фильтрация результатов: можно 
                отфильтровать ошибки по уровню соответствия (A/AA/AAA), по серьёзности и по ответственности.
              </p>

              <h4>Google Lighthouse</h4>
              <p>
                Lighthouse – это встроенный инструмент аудита от Google, доступный в Chrome и других браузерах на базе Chromium. 
                Изначально предназначен для оценки производительности и SEO, Lighthouse также включает модуль проверки доступности.
              </p>
              
              <p><strong>Как запустить:</strong> открыть панель разработчика Chrome (F12) и перейти во вкладку «Lighthouse». 
              Выбрать чекбокс <strong>Accessibility</strong> и нажать «Generate report».</p>

              <h3>Инспекторы доступности в DevTools</h3>
              <p>Современные браузеры имеют встроенные средства для анализа доступности:</p>

              <h4>Chrome</h4>
              <p>
                В панели Elements (Элементы) Chrome есть вкладка <strong>Accessibility</strong> (появляется при выборе элемента в DOM). 
                Она показывает роль выбранного элемента, его доступное имя (Accessible Name), состояние и прочие свойства accessibility API.
              </p>

              <h4>Firefox</h4>
              <p>
                В <strong>Firefox DevTools</strong> есть отдельная вкладка <strong>Accessibility</strong>. Инспектор доступности 
                Firefox предоставляет дерево Accessibility Tree, отображающее все узлы, доступные скринридерам.
              </p>

              <h4>Edge</h4>
              <p>
                Браузер Microsoft Edge в целом наследует возможности Chromium (Lighthouse, панель Accessibility), а также имеет 
                интеграцию с Narrator (экранным диктором Windows) для тестирования.
              </p>
            </ExpandableSection>

            <ExpandableSection
              title="Тестирование с помощью вспомогательных технологий"
              description="Ни один автоматический инструмент не гарантирует полной проверки доступности, поэтому критически важно проводить тесты вручную – так, как будут взаимодействовать с сайтом люди с инвалидностью."
            >
              <h3>Навигация с клавиатуры</h3>
              <p>
                Первый шаг – проверить, можно ли полноценно пользоваться сайтом без мыши, только с клавиатуры. Попробуйте 
                перемещаться по интерактивным элементам с помощью клавиши <kbd>Tab</kbd> (и <kbd>Shift + Tab</kbd> назад), 
                активировать ссылки и кнопки клавишей <kbd>Enter</kbd>, прокручивать страницу стрелками или пробелом.
              </p>
              
              <p>Убедитесь, что:</p>
              <ul>
                <li>Фокус последовательно переходит по <strong>всем интерактивным элементам</strong>, виден и не исчезает из видимой области</li>
                <li>Можно заполнить и отправить формы с клавиатуры, открывать выпадающие меню, диалоги и т.д.</li>
                <li>Нет участков страницы, куда невозможно попасть или застрять (так называемые «trap» – ловушки фокуса)</li>
                <li>Выполняются требования по порядку обхода и логической последовательности содержимого</li>
              </ul>

              <h3>Экранные читатели (скринридеры)</h3>
              <p>
                Скринридер – это программа, которая озвучивает или отображает на брайлевском дисплее содержание экрана для слепых 
                и слабовидящих пользователей. Тестирование сайта с помощью скринридера позволяет услышать сайт «ушами» пользователя 
                и проверить, насколько контент понятен без визуального контекста.
              </p>

              <h4>Популярные скринридеры</h4>
              <ul>
                <li><strong>NVDA</strong> (Windows) – бесплатный экранный читатель с открытым кодом</li>
                <li><strong>JAWS</strong> (Windows) – коммерческий скринридер от Freedom Scientific</li>
                <li><strong>Narrator</strong> (Windows) – встроенный экранный диктор Windows</li>
                <li><strong>VoiceOver</strong> (macOS и iOS) – встроенный скринридер Apple</li>
                <li><strong>TalkBack</strong> (Android) – встроенный сервис озвучивания на Android-устройствах</li>
                <li><strong>Orca</strong> (Linux) – экранный читатель для сред GNOME/Linux</li>
                <li><strong>ChromeVox</strong> (Chrome OS) – встроенный в Chromebooks скринридер</li>
              </ul>

              <h3>Тестирование с NVDA (Windows)</h3>
              <p>
                Скачайте NVDA с официального сайта (nvaccess.org) и установите. NVDA запускается сочетанием <kbd>Ctrl + Alt + N</kbd> 
                (по умолчанию). При первом запуске появится окно приветствия NVDA, где можно настроить раскладку клавиатуры и другие параметры.
              </p>

              <h4>Важные клавиши и команды NVDA:</h4>
              <ul>
                <li><strong>NVDA-модификатор</strong> – специальная клавиша, используемая в сочетаниях (по умолчанию <kbd>Insert</kbd>)</li>
                <li><kbd>NVDA + Q</kbd> – выключить NVDA (полностью выйти из программы)</li>
                <li><kbd>Ctrl</kbd> – мгновенно остановить речь</li>
                <li><kbd>H</kbd> – перейти к следующему заголовку на странице; <kbd>Shift + H</kbd> – к предыдущему</li>
                <li><kbd>NVDA + F7</kbd> – открыть диалог Elements List (список всех ссылок, заголовков или ориентиров страницы)</li>
                <li><kbd>NVDA + N</kbd> – открыть меню NVDA</li>
              </ul>

              <h3>Тестирование с JAWS (Windows)</h3>
              <p>
                Если у вас есть доступ к JAWS (или демо-версия), стоит протестировать сайт и в нём, поскольку JAWS интерпретирует 
                некоторые вещи иначе, чем NVDA. JAWS – коммерческий скринридер, но широко используемый в профессиональной среде.
              </p>

              <h3>Тестирование с VoiceOver (Mac)</h3>
              <p>
                На компьютерах Mac скринридер VoiceOver включается сочетанием <kbd>Cmd + F5</kbd>. При активном VoiceOver для управления 
                используются так называемые <em>VO-клавиши</em> – по умолчанию это <kbd>Ctrl + Option</kbd>.
              </p>

              <h3>Тестирование на мобильных устройствах</h3>
              <p>
                Обязательно проверьте хотя бы ключевые сценарии на смартфоне с включённым TalkBack (Android) или VoiceOver (iOS). 
                Управление там отличается (используются жесты: свайпы, двойной тап для активации).
              </p>

              <h3>Другие вспомогательные технологии</h3>

              <h4>Экранные лупы</h4>
              <p>
                Пользователи с <strong>слабым зрением</strong> нередко применяют экранные лупы. Например, системные лупы: 
                <em>Zoom</em> в macOS или <em>Magnifier</em> в Windows. При тестировании убедитесь, что при масштабировании 
                интерфейс не теряет функциональности.
              </p>

              <h4>Высокий контраст</h4>
              <p>
                Пользователи с нарушениями зрения могут включать режимы высокого контраста (например, Windows High Contrast) 
                или особые цветовые схемы. Контент сайта должен оставаться различимым.
              </p>

              <h4>Управление голосом</h4>
              <p>
                Люди с моторными нарушениями пользуются программами распознавания речи, такими как Dragon NaturallySpeaking, 
                либо встроенными голосовыми ассистентами. Они могут открывать ссылки и нажимать кнопки, произнося их названия.
              </p>

              <h4>Специальные устройства ввода</h4>
              <p>
                К ним относятся переключатели (sip-and-puff, одноместные кнопки), альтернативные клавиатуры, трекболы и прочее. 
                Обычно они эмулируют базовые команды клавиатуры/мыши, поэтому ключевое – поддержка управления с клавиатуры и понятный фокус.
              </p>
            </ExpandableSection>

            <ExpandableSection
              title="Советы по эффективному тестированию"
              description="Практические рекомендации для организации комплексного тестирования доступности, включающего автоматические проверки и ручное тестирование."
            >
              <h3>Основные принципы</h3>

              <h4>1. Комбинируйте инструменты</h4>
              <p>
                Начните с автоматических сканеров (валидаторы, WAVE, axe) – исправьте найденные ошибки. Затем переходите к ручному 
                тестированию: клавиатура, скринридеры, лупа. Такой поэтапный подход закроет максимум проблем.
              </p>

              <h4>2. Документируйте обнаруженные проблемы</h4>
              <p>
                В процессе тестирования фиксируйте каждое нарушение (скриншоты экрана со скринридером или видео взаимодействия 
                помогут разработчикам воспроизвести ситуацию). Указывайте, каким инструментом или технологией выявлена проблема.
              </p>

              <h4>3. Тестируйте в разных комбинациях</h4>
              <p>
                Поведение может отличаться в зависимости от браузера и скринридера. Если обнаружен странный баг только в одном 
                сочетании (например, VoiceOver + Chrome), попробуйте повторить в другом (VoiceOver + Safari).
              </p>

              <h4>4. Используйте эмуляторы при необходимости</h4>
              <p>
                Если нет возможности физически тестировать на всех устройствах, есть онлайн-сервисы, предоставляющие доступ 
                к скринридерам. Например, <strong>BrowserStack</strong> позволяет запускать различные ОС/браузеры со скринридерами, 
                а сервис <strong>Assistiv Labs</strong> эмулирует удалённое тестирование популярных скринридеров.
              </p>

              <h4>5. Привлекайте реальных пользователей</h4>
              <p>
                Тесты разработчиков не заменят опыта людей, постоянно использующих вспомогательные технологии. После внутренней 
                проверки постарайтесь провести юзабилити-тестирование с участием людей с инвалидностью. Они могут выявить 
                неочевидные барьеры и подсказать, насколько комфортно пользоваться сайтом на практике.
              </p>

              <h3>Заключение</h3>
              <p>
                Используя весь этот арсенал инструментов – от валидаторов до скринридеров – вы сможете всесторонне проверить 
                веб-сайт на соответствие стандартам <strong>WCAG 2.1</strong> и убедиться, что контент доступен для всех пользователей. 
                Помните, цель тестирования доступности не только в соблюдении требований, но и в том, чтобы сделать пользовательский 
                опыт лучше для людей с разными возможностями.
              </p>

              <h3>Полезные ссылки</h3>
              <ul>
                <li>
                  <a href="https://wave.webaim.org/" target="_blank" rel="noopener noreferrer">
                    WebAIM WAVE – онлайн-валидатор доступности
                  </a>
                </li>
                <li>
                  <a href="https://wave.webaim.org/extension/" target="_blank" rel="noopener noreferrer">
                    WAVE – расширения браузера
                  </a>
                </li>
                <li>
                  <a href="https://accessibilityinsights.io/" target="_blank" rel="noopener noreferrer">
                    Microsoft Accessibility Insights
                  </a>
                </li>
                <li>
                  <a href="https://www.nvaccess.org/" target="_blank" rel="noopener noreferrer">
                    NVDA Screen Reader
                  </a>
                </li>
              </ul>
            </ExpandableSection>
          </article>
        </div>
      </main>
      
      <Footer />
    </div>
  );
}